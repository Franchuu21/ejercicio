import React, { useState } from 'react';

const GoalInput = () => {
  const [inputValue, setInputValue] = useState('');
  const [goals, setGoals] = useState([]);

  const addGoal = () => {
    if (inputValue.trim() !== '') {
      setGoals([...goals, inputValue]);
      setInputValue('');
    }
  };



  useEffect(() => {
    document.title = `Goals: ${goals.length}`;
  }, [goals]);


  return (
    <div>
      <input
        type="text"
        value={inputValue}
        onChange={(e) => setInputValue(e.target.value)}
      />
      <button onClick={addGoal}>Agregar</button>
      <ul>
        {goals.map((goal, index) => (
          <li key={index}>{goal}</li>
        ))}
      </ul>
    </div>
  );
};

export default GoalInput;





// En tu archivo principal de la aplicación:

import { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';
import GoalInput from './GoalInput';
import Instructions from './Instructions';

const App = () => {
  return (
    <Router>
      <nav>
        <Link to="/">Home</Link>
        <Link to="/instructions">Instrucciones</Link>
      </nav>
      <Switch>
        <Route path="/instructions" component={Instructions} />
        <Route path="/" component={GoalInput} />
      </Switch>
    </Router>
  );
};

export default App;





// En un archivo separado, ThemeContext.js:

import { createContext, useContext, useState } from 'react';

const ThemeContext = createContext();

export const useTheme = () => {
  return useContext(ThemeContext);
};

export const ThemeProvider = ({ children }) => {
  const [isBlue, setIsBlue] = useState(false);

  const toggleTheme = () => {
    setIsBlue(!isBlue);
  };

  const theme = {
    isBlue,
    toggleTheme,
  };

  return (
    <ThemeContext.Provider value={theme}>
      {children}
    </ThemeContext.Provider>
  );
};





import { ThemeProvider, useTheme } from './ThemeContext';

const App = () => {
  const { isBlue, toggleTheme } = useTheme();

  return (
    <ThemeProvider>
      <div style={{ backgroundColor: isBlue ? 'blue' : 'white' }}>
        {/* Resto de tu aplicación */}
      </div>
    </ThemeProvider>
  );
};
